package fr.epsi;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;

public class ConnexionJpa {
    public static void main(String[] args) {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("comptaPU");

        EntityManager em = emf.createEntityManager();

        try {
            System.out.println("Connexion √† la base de donn√©es r√©ussie !");

            // üîπ Test : R√©cup√©rer un emprunt par son ID et afficher les livres associ√©s
            int empruntId = 1; // Exemple d'ID √† tester
            Emprunt emprunt = em.find(Emprunt.class, empruntId);
            if (emprunt != null) {
                System.out.println("Emprunt ID: " + emprunt.getId() + ", Date de d√©but: " + emprunt.getDateDebut());
                System.out.println("Livres associ√©s :");
                emprunt.getLivres().forEach(livre ->
                        System.out.println("- " + livre.getTitre() + " de " + livre.getAuteur())
                );
            } else {
                System.out.println("Aucun emprunt trouv√© pour l'ID " + empruntId);
            }

            // üîπ Test : R√©cup√©rer tous les emprunts d'un client donn√©
            int clientId = 1; // Exemple d'ID √† tester
            Client client = em.find(Client.class, clientId);
            if (client != null) {
                System.out.println("\nEmprunts du client " + client.getNom() + " " + client.getPrenom() + " :");
                client.getEmprunts().forEach(emp ->
                        System.out.println("- Emprunt ID: " + emp.getId() + ", Date de d√©but: " + emp.getDateDebut())
                );
            } else {
                System.out.println("Aucun client trouv√© pour l'ID " + clientId);
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            em.close();
            emf.close();
        }
    }
}